#include <stdio.h>
#include<malloc.h>
#include <stdlib.h>
typedef struct macierz
{
    int wiersze , kolumny;
    float* elementy;
}macierz;

macierz utworz_macierz(int wiersze , int kolumny )
{
    return (macierz) { .wiersze = wiersze , .kolumny = kolumny , .elementy = calloc(wiersze * kolumny , sizeof(float) )  };
}

void wypisz_macierz(macierz M)
{
    for(int i = 0; i < M.wiersze ; i++)
    {
        for( int j = 0 ; j < M.kolumny ; j++)
        printf ("%f " , M.elementy );
        printf ("\n");
    }

}
void wpisz(macierz M)
{
for(int i = 0 ; i < M.wiersze ; i++)
    for(int j = 0 ; j < M.kolumny ; i++)
    {
        M.elementy[i * M.kolumny + j] = rand()%10+0;
    }
}
/*
float iloczyn( macierz M1 , macierz M2)
{

if(M1.kolumny != M2.kolumny)
{
    printf ("nie można utworzyć macierzy")
    return;
}
macierz M3 = utworz_macierz(M1.wiersze , M2. kolumny);
for(int i = 0 ; i < M3.wierszy ; i++)
    {
        for(int j = 0 ; j < M3.kolumny ; j++)
         {
             float pom = 0;
             for( int k = 0 ; k < ; k++ )
             pom = pom + M1.elementy[i] * M2.elementy[k];
         }
    }
    return M3;
}   
*/
void main()
{
macierz M1 = utworz_macierz(3,3);
wypisz_macierz(M1);
//iloczyn(M1 , M2);
wpisz(M1);
wypisz_macierz(M1);

}
//randomowe liczby rand
